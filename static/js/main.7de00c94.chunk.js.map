{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","perPage","total","currentPage","onPageChange","buttonsCount","Math","ceil","postNumbers","isFirstPage","isLastPage","_jsxs","className","children","_jsx","cn","disabled","href","onClick","preventClickOnFirstPage","map","number","active","concat","preventClickOnLastPage","items","App","setCurrentPage","useState","setPerPage","lastPostPage","firstPostPage","currentPosts","slice","totalItems","length","finalItems","id","onChange","e","parseInt","target","value","htmlFor","page","post","ReactDOM","render","document","getElementById"],"mappings":"4JAAO,SAASA,EAAWC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGF,MAAMG,EAAwCC,IAK9C,IAL+C,QACpDC,EAAO,MACPC,EAAK,YACLC,EAAW,aACXC,GACDJ,EACC,MAAMK,EAAeC,KAAKC,KAAKL,EAAQD,GACjCO,EAAcf,EAAW,EAAGY,GAC5BI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAcnC,OACEM,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAAUP,IAAeI,SACxDC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACLC,QAbwBC,KACzBV,GACHL,EAAaD,EAAc,IAYvB,gBAAeM,EAAYI,SAC5B,WAIFL,EAAYY,KAAIC,GACfP,cAAA,MACEF,UAAWG,IAAG,YAAa,CAAEO,OAAQD,IAAWlB,IAAeU,SAG/DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAI,IAAAM,OAAMF,GACVH,QAASA,IAAMd,EAAaiB,GAAQR,SAEnCQ,KAREA,KAYTP,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAAUN,IAAcG,SACvDC,cAAA,KACE,UAAQ,WACRI,QA3CuBM,KACxBd,GACHN,EAAaD,EAAc,IA0CvBS,UAAU,YACVK,KAAK,QACL,gBAAeP,EAAWG,SAC3B,eC9DHY,EAAQhC,EAAW,EAAG,IAAI2B,KAAIvB,GAAC,QAAA0B,OAAY1B,KAEpC6B,EAAgBA,KAC3B,MAAOvB,EAAawB,GAAkBC,mBAAS,IACxC3B,EAAS4B,GAAcD,mBAAS,GAEjCE,EAAe3B,EAAcF,EAC7B8B,EAAgBD,EAAe7B,EAC/B+B,EAAeP,EAAMQ,MAAMF,EAAeD,GAC1CI,EAAaT,EAAMU,OACnBC,EAAanC,EAAUE,EAW7B,OACEQ,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJF,eAAA,KAAGC,UAAU,OAAO,UAAQ,OAAMC,SAAA,CAAC,QAC3BV,EAAY,WAASF,EAAUE,EAAcF,EAAU,EAAE,KAAG,IACjEmC,GAAcF,EAAaA,EAAaE,EAAW,OAAKF,EAAW,OAGtEvB,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACE,UAAQ,kBACR0B,GAAG,kBACHzB,UAAU,eACV0B,SAxB8DC,IACtEV,EAAWW,SAASD,EAAEE,OAAOC,MAAO,KACpCf,EAAe,IAuBPe,MAAOzC,EAAQY,SAAA,CAEfC,cAAA,UAAQ4B,MAAM,IAAG7B,SAAC,MAClBC,cAAA,UAAQ4B,MAAM,IAAG7B,SAAC,MAClBC,cAAA,UAAQ4B,MAAM,KAAI7B,SAAC,OACnBC,cAAA,UAAQ4B,MAAM,KAAI7B,SAAC,YAIvBC,cAAA,SAAO6B,QAAQ,kBAAkB/B,UAAU,qBAAoBC,SAAC,sBAIlEC,cAACf,EAAU,CACTG,MAAOgC,EACPjC,QAASA,EACTE,YAAaA,EACbC,aArCoBwC,IACxBjB,EAAeiB,MAsCb9B,cAAA,MAAAD,SACGmB,EAAaZ,KAAIyB,GAChB/B,cAAA,MAAe,UAAQ,OAAMD,SAC1BgC,GADMA,WC7DnBC,IAASC,OAAOjC,cAACY,EAAG,IAAKsB,SAASC,eAAe,U","file":"static/js/main.7de00c94.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype PaginationProps = {\n  perPage: number;\n  total: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  perPage,\n  total,\n  currentPage,\n  onPageChange,\n}) => {\n  const buttonsCount = Math.ceil(total / perPage);\n  const postNumbers = getNumbers(1, buttonsCount);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === buttonsCount;\n\n  const preventClickOnLastPage = () => {\n    if (!isLastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const preventClickOnFirstPage = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: isFirstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          onClick={preventClickOnFirstPage}\n          aria-disabled={isFirstPage}\n        >\n          «\n        </a>\n      </li>\n      {postNumbers.map(number => (\n        <li\n          className={cn('page-item', { active: number === currentPage })}\n          key={number}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${number}`}\n            onClick={() => onPageChange(number)}\n          >\n            {number}\n          </a>\n        </li>\n      ))}\n      <li className={cn('page-item', { disabled: isLastPage })}>\n        <a\n          data-cy=\"nextLink\"\n          onClick={preventClickOnLastPage}\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const lastPostPage = currentPage * perPage;\n  const firstPostPage = lastPostPage - perPage;\n  const currentPosts = items.slice(firstPostPage, lastPostPage);\n  const totalItems = items.length;\n  const finalItems = perPage * currentPage;\n\n  const handleChangeSelect: React.ChangeEventHandler<HTMLSelectElement> = e => {\n    setPerPage(parseInt(e.target.value, 10));\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {currentPage} (items {perPage * currentPage - perPage + 1} -{' '}\n        {finalItems >= totalItems ? totalItems : finalItems} of {totalItems})\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleChangeSelect}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n      <ul>\n        {currentPosts.map(post => (\n          <li key={post} data-cy=\"item\">\n            {post}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}